<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kishore Ganesh</title>
    <link>https://kishoreganesh.com/</link>
    <description>Recent content on Kishore Ganesh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Dec 2023 07:10:28 -0800</lastBuildDate>
    <atom:link href="https://kishoreganesh.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Are Ubuntu APT repositories wasting space?</title>
      <link>https://kishoreganesh.com/post/apt-archive-wasted-space/</link>
      <pubDate>Sun, 10 Dec 2023 07:10:28 -0800</pubDate>
      <guid>https://kishoreganesh.com/post/apt-archive-wasted-space/</guid>
      <description>Sometime back, I went into a deep rabbit hole. This is a documentation of what I found. Consider the Ubuntu APT repository. I&amp;rsquo;m using the bionic-backports one.&#xA;Each APT registry contains a &amp;lsquo;Release&amp;rsquo; file which is an index of all the files in the repository. There are files listed with their associated archive files (a &amp;lsquo;.gz&amp;rsquo; and a &amp;lsquo;.xz&amp;rsquo; archive).&#xA;Somehow I wondered what gzip options are used to create the archives.</description>
    </item>
    <item>
      <title>Build arcana</title>
      <link>https://kishoreganesh.com/build-arcana/</link>
      <pubDate>Sun, 10 Dec 2023 04:04:20 -0800</pubDate>
      <guid>https://kishoreganesh.com/build-arcana/</guid>
      <description>A set of arcana about build tools, linkers, programming languages etc which are probably only useful to me&#xA;LD_DEBUG spits out debug information about linkers cmake &amp;ndash;trace to trace the evaluation of a cmake file Use LD_PRELOAD + RTLD_NEXT in order to &amp;ldquo;intercept&amp;rdquo; function calls #include_next to include the next header file match. Similarly RTLD_NEXT RTLD_LOCAL to restrict symbol leak Linker version map Linker symbol map patchelf to directly modify attributes of an ELF ELF can be marked as NODELETE to not be deleted on NODELETE dl_close won&amp;rsquo;t unload a libary if it has any symbols marked as STB_GNU_UNIQUE (&amp;lsquo;u&amp;rsquo; in nm) or have any thread-local destructors registered sudo apt install package:arch to install package for specific architecture rpath and runpaths are attributes inside ELF which dictate where it&amp;rsquo;ll search for dynamic libraries dl_open can be used to implement loadable plugins Use /proc/pid/maps to find the memory map of a process gdb -p pid to attach to a running process lldb &amp;ndash; to forward args.</description>
    </item>
    <item>
      <title>Why did dlclose not unload the library?</title>
      <link>https://kishoreganesh.com/post/why-dl-close-did-not-work/</link>
      <pubDate>Sat, 09 Dec 2023 23:07:54 -0800</pubDate>
      <guid>https://kishoreganesh.com/post/why-dl-close-did-not-work/</guid>
      <description>Recently, at work, we were debugging an issue where dlclose was not unloading the library . You might wonder why that even matters - if your library contains any global symbols, then their state will persist across a dlopen, dlclose sequence. In other words, your library isn&amp;rsquo;t starting from a clean state every time.&#xA;In the case we were debugging, this issue manifested in the following fashion: We had two libraries libA and libB and libA dynamically depends on libB.</description>
    </item>
    <item>
      <title>Hi</title>
      <link>https://kishoreganesh.com/about/</link>
      <pubDate>Sat, 09 Dec 2023 22:01:41 -0800</pubDate>
      <guid>https://kishoreganesh.com/about/</guid>
      <description>I’m Kishore Ganesh. I love everything about Computer Science, from nifty discrete math proofs to more concrete systems-domains like Operating System to visual domains like Computer Graphics. I love building projects, especially in domains I’m unfamiliar with.&#xA;One of my favorite things to do is to dive into a new topic and spend multiple weeks building up expertise on it.&#xA;My most notable projects are:&#xA;Jack Toolchain: Wishing to know how computers work on a low level, I followed the NAND2Tetris book and built a computer from scratch in a hardware simulator, along with a two-phase compiler and assembler for the same computer.</description>
    </item>
    <item>
      <title>Writing a simple JSON Parser from scratch in C&#43;&#43;</title>
      <link>https://kishoreganesh.com/post/writing-a-json-parser-in-cplusplus/</link>
      <pubDate>Fri, 30 Apr 2021 21:18:05 -0800</pubDate>
      <guid>https://kishoreganesh.com/post/writing-a-json-parser-in-cplusplus/</guid>
      <description>JSON is one of the most common data interchange formats there is. Thankfully, it is also a pretty simple one. I had written a JSON parser in C++ sometime back, and whilst making it I came across a few decisions that were more involved than I thought they would be. So I have decided to write an article around that JSON Parser. While JSON Parsing is simple, writing one would definitely be useful to build more complex parsers, since the general principles are still present.</description>
    </item>
    <item>
      <title>Taking away control: The dumb programmer and the smart compiler</title>
      <link>https://kishoreganesh.com/post/programming_languages/</link>
      <pubDate>Thu, 29 Apr 2021 22:29:29 -0800</pubDate>
      <guid>https://kishoreganesh.com/post/programming_languages/</guid>
      <description>Good compilers prevent you from shooting yourself in the foot. Today, you have a wide assortment of programming languages to choose from, you can have your pick of paradigm. As a brief detour, the perspective of programmers comes full circle as they move from beginner to slightly experienced to intermediate.&#xA;The beginner is deathly afraid of the differences between programming languages. In the beginning, they stick to one language out of the fear of learning something new.</description>
    </item>
    <item>
      <title>Bootup</title>
      <link>https://kishoreganesh.com/post/bootup/</link>
      <pubDate>Thu, 29 Apr 2021 20:29:29 -0800</pubDate>
      <guid>https://kishoreganesh.com/post/bootup/</guid>
      <description>A long, long time back, in a galaxy far far away, I was doing the same thing I’m doing right now. Booting up a blog. Genesis. Creation. My older blogs are many years behind me, and now a new journey begins.&#xA;I have witnessed a stark change in how I view blogging, or how I view writing in general over my 4 years of college. More on that in a later post, but I’m excited to embark on this new journey, incorporating the many insights hidden away in some deep dark corner of my Google Keep.</description>
    </item>
  </channel>
</rss>
